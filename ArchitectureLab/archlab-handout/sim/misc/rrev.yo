                            | #Fatih YILDIZ 2306793
                            | # Execution begins at address 0
0x000:                      | .pos 0
0x000: 30f40002000000000000 |   irmovq stack, %rsp      # set up stack pointer
0x00a: 30f70001000000000000 |   irmovq ele0, %rdi		    # set parameter
0x014: 805001000000000000   |   call rrev                # call rrev(ele0)
0x01d: 00                   |   halt                    # terminate program
                            | 
                            | # Sample linked list
0x100:                      | .pos 0x100
0x100:                      | ele0:
0x100: 0a00000000000000     |   .quad 0x0000a
0x108: 1001000000000000     |   .quad ele1
0x110:                      | ele1:
0x110: b000000000000000     |   .quad 0x000b0
0x118: 2001000000000000     |   .quad ele2
0x120:                      | ele2:
0x120: 000c000000000000     |   .quad 0x00c00
0x128: 3001000000000000     |   .quad ele3
0x130:                      | ele3:
0x130: 00d0000000000000     |   .quad 0x0d000
0x138: 4001000000000000     |   .quad ele4
0x140:                      | ele4:
0x140: 00000e0000000000     |   .quad 0xe0000
0x148: 0000000000000000     |   .quad 0
                            | 
                            | # rax holds rev_head, rdi holds head.
                            | 
0x150:                      | rrev:
0x150: 6300                 |   xorq %rax, %rax 		    # list* rev_head = 0
0x152: 6277                 |   andq %rdi, %rdi         # test head
0x154: 73a801000000000000   |   je done                 # if(head==0) go to done
0x15d: 50b70800000000000000 |   mrmovq $8(%rdi), %r11   # r10 = head->next
0x167: 62bb                 |   andq %r11, %r11         # test head->next
0x169: 73a801000000000000   |   je done                 # if(head->next==0) go to done
                            | 
0x172: a0af                 |   pushq %r10				      # else, save value from caller
                            | 
0x174: 50770800000000000000 |   mrmovq 8(%rdi), %rdi    # set rdi to send to function
0x17e: 805001000000000000   |   call rrev
0x187: 40771800000000000000 |   rmmovq %rdi, $24(%rdi)  # head->next->next = head
0x191: 30fc0000000000000000 |   irmovq $0, %r12         # r12 = 0
0x19b: 40c70800000000000000 |   rmmovq %r12, 8(%rdi)    # head->next = 0
                            | 
0x1a5: b0af                 |   popq %r10				        # restore caller's value
0x1a7: 90                   |   ret
0x1a8:                      | done:
0x1a8: 2070                 |   rrmovq %rdi, %rax       # return head
0x1aa: 90                   |   ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |   .pos 0x200
0x200:                      | stack:
