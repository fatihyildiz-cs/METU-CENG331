                            | #Fatih YILDIZ 2306793
                            | # Execution begins at address 0
0x000:                      | .pos 0
0x000: 30f40002000000000000 |   irmovq stack, %rsp      # set up stack pointer
0x00a: 30f70001000000000000 |   irmovq ele0, %rdi		    # set parameter
0x014: 805001000000000000   |   call rev                # call rev(ele0)
0x01d: 00                   |   halt                    # terminate program
                            | 
                            | # Sample linked list
0x100:                      | .pos 0x100
                            | 
0x100:                      | ele0:
0x100: 0a00000000000000     |   .quad 0x0000a
0x108: 1001000000000000     |   .quad ele1
0x110:                      | ele1:
0x110: b000000000000000     |   .quad 0x000b0
0x118: 2001000000000000     |   .quad ele2
0x120:                      | ele2:
0x120: 000c000000000000     |   .quad 0x00c00
0x128: 3001000000000000     |   .quad ele3
0x130:                      | ele3:
0x130: 00d0000000000000     |   .quad 0x0d000
0x138: 4001000000000000     |   .quad ele4
0x140:                      | ele4:
0x140: 00000e0000000000     |   .quad 0xe0000
0x148: 0000000000000000     |   .quad 0
                            | 
                            | # rax holds prev, rdi holds head, r10 holds next.
                            | 
0x150:                      | rev:
0x150: 6300                 |   xorq %rax, %rax 		    # prev = 0
0x152: 707301000000000000   |   jmp test 				        # jump directly to test
                            | 
0x15b:                      | loop:
                            | 
0x15b: 50a70800000000000000 |   mrmovq 8(%rdi), %r10    # r10 = (rdi+8)     # list *next = head->next;
0x165: 40070800000000000000 |   rmmovq %rax, 8(%rdi)    # (rdi+8) = rax     # head->next = rax;
0x16f: 2070                 |   rrmovq %rdi, %rax       # rax = rdi;        # prev = head;
0x171: 20a7                 |   rrmovq %r10, %rdi       # rdi = r10;        # head = next;
                            | 
0x173:                      | test:
0x173: 6277                 |   andq %rdi, %rdi 		 # test loop variable (head)
0x175: 745b01000000000000   |   jne    loop          # Stop when head==0
0x17e: 90                   |   ret                  # return prev (rax)
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |   .pos 0x200
0x200:                      | stack:
